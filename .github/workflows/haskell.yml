name: Build, Test, and release

on:
  push:
    paths-ignore: "**.md"
  workflow_dispatch:

jobs:
  build_test_release:
    name: Build, test and release (${{ matrix.os }}/GHC ${{ matrix.ghc }}/${{ github.ref }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        ghc-version: ['9.8']

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        

      - name: Set up Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Set up Cachix (optional)
        uses: cachix/cachix-action@v14
        with:
          name: indigo
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        continue-on-error: true


      - name: Build with Nix
        run: |
          nix build .


      - name: Run tests with Nix
        run: |
          nix develop --command bash -c "cabal update && cabal test all"
        
      - uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 3
          delete_tag_pattern: latest-.+
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          

      - name: Prepare release directory
        run: |
          mkdir -p indigo-latest-${{matrix.os}}
          # Debug: Show what's in the result directory
          echo "Contents of result directory:"
          find ./result -type f -ls || echo "No result directory found"
          ls -la ./result/ || echo "Cannot list result directory"
          
          # Find the built binary from nix build output
          BIN_PATH=$(find ./result/bin -type f -executable -name 'indigo*' | head -n1)
          if [ -z "$BIN_PATH" ]; then
            # Try alternative patterns
            BIN_PATH=$(find ./result -type f -name 'indigo' | head -n1)
          fi
          if [ -z "$BIN_PATH" ]; then
            # Try any executable file
            BIN_PATH=$(find ./result -type f -executable | head -n1)
          fi
          if [ -z "$BIN_PATH" ]; then 
            echo "Binary not found in nix build output!"
            echo "Available files:"
            find ./result -type f
            exit 1
          fi
          echo "Found binary at: $BIN_PATH"
          cp "$BIN_PATH" indigo-latest-${{matrix.os}}/indigo
          cp -r share/std indigo-latest-${{matrix.os}}

      - name: Zip release (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          powershell Compress-Archive -Path indigo-latest-${{matrix.os}}/* -DestinationPath indigo-latest-${{matrix.os}}.zip

      - name: Zip release
        if: matrix.os != 'windows-latest'
        run: |
          zip -r indigo-latest-${{matrix.os}}.zip indigo-latest-${{matrix.os}}/*
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          tag_name: latest-${{ github.sha }}
          draft: false
          prerelease: false
          generate_release_notes: false
          files: indigo-latest-${{matrix.os}}.zip

  build_wasm:
    name: Build WASM reactor
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Set up Cachix (optional)
        uses: cachix/cachix-action@v14
        with:
          name: indigo
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        continue-on-error: true

      - name: Build WASM reactor
        run: |
          nix build .#build-wasm-reactor

      - name: Prepare WASM release
        run: |
          mkdir -p indigo-wasm-latest
          cp result/indigo-init.wasm indigo-wasm-latest/
          cp -r share/std indigo-wasm-latest/

      - name: Zip WASM release
        run: |
          zip -r indigo-wasm-latest.zip indigo-wasm-latest/*

      - name: Release WASM
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          tag_name: latest-${{ github.sha }}
          draft: false
          prerelease: false
          generate_release_notes: false
          files: indigo-wasm-latest.zip
