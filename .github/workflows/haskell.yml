name: Build, Test, and release

on:
  push:
    paths-ignore: "**.md"
  workflow_dispatch:

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 3
          delete_tag_pattern: latest-.+
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          tag_name: latest-${{ github.sha }}
          draft: false
          prerelease: false
          generate_release_notes: false
  build_artifact:
    needs: create_release
    name: ${{ matrix.os }}/GHC ${{ matrix.ghc }}/${{ github.ref }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc-version: ['latest']

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Set up GHC ${{ matrix.ghc-version }}
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc-version }}
          # Defaults, added for clarity:
          cabal-version: 'latest'
          cabal-update: true

      - name: Configure the build
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: actions/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        run: cabal build all --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v3
        # Caches are immutable, trying to save with the same key would error.
        if: ${{ steps.cache.outputs.cache-primary-key != steps.cache.outputs.cache-matched-key }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}
          
      - name: Build
        run: cabal build all

      - name: Run tests
        run: cabal test all

      - name: Build binary
        run: |
          mkdir dist-${{matrix.os}}
          cabal install exe:indigo --install-method=copy --overwrite-policy=always --installdir=dist-${{matrix.os}}
      
      - name: Set binary extension (Windows)
        if: matrix.os == 'windows-latest'
        run: echo "BINARY_EXT=.exe" >> $env:GITHUB_ENV
      
      - name: Rename binary
        run: mv dist-${{matrix.os}}/indigo${{env.BINARY_EXT}} dist-${{matrix.os}}/indigo-${{matrix.os}}${{env.BINARY_EXT}}
          
      - name: Set binary path
        run: echo "BINARY_PATH=./dist-${{matrix.os}}/indigo-${{matrix.os}}${{env.BINARY_EXT}}" >> $GITHUB_ENV
      
      - name: Set binary path (Windows)
        run: echo "BINARY_PATH=./dist-${{matrix.os}}/indigo-${{matrix.os}}${{env.BINARY_EXT}}" >> $env:GITHUB_ENV

      - name: Arrange release files
        run: |
          mkdir indigo-latest-${{matrix.os}}
          mv ${{env.BINARY_PATH}} indigo-latest-${{matrix.os}}/indigo${{env.BINARY_EXT}}
          mv share/std indigo-latest-${{matrix.os}}

      - name: Zip (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Compress-Archive -Path indigo-latest-${{matrix.os}}/* -DestinationPath indigo-latest-${{matrix.os}}.zip
      
      - name: Zip
        if: matrix.os != 'windows-latest'
        run: |
          zip -r indigo-latest-${{matrix.os}}.zip indigo-latest-${{matrix.os}}/*
      
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest-${{ github.sha }}
          files: indigo-latest-${{matrix.os}}.zip
