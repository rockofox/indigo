struct State = (x: Int, y: Int)

impl Monad for State = do
  bind State{x: x, y: y} f = f x
  return x = State{x: x, y: 0}
  sequence aaa bbb = mergeStructs aaa, bbb
end

`:=` :: String -> Any -> State
`:=` n v = do
  update State{}, n, v
end

testState :: State
testState = do
   "x" := 123
   "y" := 4562
   "x" := 1232
   # liftM (println "Hello, world!")
end

main :: IO
# main = println testState
main = do
  testCase "abc", (\x -> do
    assertEquals "x", "y"
  end)
end
